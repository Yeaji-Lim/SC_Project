<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="info">


	<!-- 원글 select에서 호출하는 resultMap 
	 1 대 다 관계에 따른 resultMap정의-->
	<resultMap type="silver.web.board.vo.BbsVO" id="bbs">
		<!-- 기본키 컬럼과 지정된 객체의
		 (mybatis.vo.BbsVO) 변수를 지정 -->
		<id column="seq" property="seq"/>
		
		<!-- b_idx값을 가지고 CommVO객체 
		 여러 개를 반환받아 변수 c_list에 대입 -->
		<collection property="c_list" 
		 column="seq" ofType="silver.web.board.vo.CommVO"
		 select="commList"/>
	</resultMap>



	<!-- 특정 원글을 참조하는 댓글 셀렉문 -->
	
	<select id="commList" 
	parameterType="String" 
	resultType="silver.web.board.vo.CommVO">
		SELECT * FROM comment_t	WHERE seq=#{no}
	</select>
	
	
	<!-- 댓글추가 인설문 -->
	<insert id="addComment" 
	parameterType="silver.web.board.vo.CommVO">
		INSERT INTO comment_t(c_idx, writer, 
		  content, pwd, write_date, ip, seq)
		VALUES(comment_t_seq.NEXTVAL,
		  #{writer}, #{content}, #{pwd}, 
		  sysdate, #{ip}, #{seq})
	</insert>


	<!-- 페이징 기법을 위한 
	 전체게시물의 수를 반환 -->
	<select id="totalCount" resultType="int"
	 parameterType="String">
		SELECT COUNT(*) FROM bbs2 WHERE bname=#{n}
	</select>
	
	<!-- 페이징 기법을 활용한 select -->
	<select id="list" 
	resultMap="bbs" 
	parameterType="java.util.Map">
		SELECT * FROM (	SELECT rownum as r_num, a.* FROM (
				SELECT seq,writer,title,content,pwd,hit,groups,step,lev,bname,to_char(regdate,'yy-mm-dd')regdate,uploadfilename,ip FROM bbs2
				WHERE bname=#{bname}
				ORDER BY groups DESC, lev ASC
			) a
		) WHERE r_num BETWEEN #{begin} AND #{end}
	
	</select>
	
	<!-- 원글을 저장하는 insert -->
	<insert id="write" 
	parameterType="silver.web.board.vo.BbsVO">
		INSERT INTO bbs2(seq, writer, title,
		 content, pwd, hit, groups, step, lev,
		 bname, regdate, uploadFileName, ip)
		VALUES(bbs2_seq.NEXTVAL,#{writer},
		 #{title},#{content}, #{pwd}, 0, 
		 bbs2_group.NEXTVAL, 0, 0,
		 #{bname}, sysdate, 
		 #{uploadFileName}, #{ip})
	</insert>
	
	<!-- 답변을 저장하기 전에
	 lev를 조정하는 update
	 (참조글의 groups가 같고, 참조글의
	  lev보다 큰 lev값을 1씩 증가시킨다.) -->
	<update id="updateLev" 
	parameterType="java.util.Map">
		UPDATE bbs2
		SET lev=lev+1
		WHERE groups=#{groups} 
		AND
			lev &gt; #{lev}
	</update>
	
	<!-- 답변을 저장하는 insert -->
	<insert id="addAns" 
	parameterType="silver.web.board.vo.BbsVO">
		INSERT INTO bbs2(seq, writer, title,
		 content, pwd, hit, groups, step, lev,
		 bname, regdate, uploadFileName, ip)
		VALUES(bbs2_seq.NEXTVAL,#{writer},
		 #{title},#{content}, #{pwd}, 0, 
		 #{groups}, #{step}, #{lev},
		 #{bname}, sysdate, 
		 #{uploadFileName}, #{ip})
	</insert>
	
	<!-- 게시물 보기 기능을 수행하는 select
	  기본키(seq)값으로 검색한다. -->
	<select id="getBoard" 
	parameterType="String" 
	resultMap="bbs">
		SELECT seq,writer,title,content,pwd,hit,groups,step,lev,bname,to_char(regdate,'yy-mm-dd')regdate,uploadfilename,ip FROM bbs2 WHERE seq=#{n}
	</select>  
	  
	<!-- 게시물 수정 기능(기본키와 pwd가 필요) -->
	<update id="edit" 
	parameterType="silver.web.board.vo.BbsVO">
		UPDATE bbs2
		SET title=#{title},
			content=#{content}
			<if test="uploadFileName != null">
				,uploadFileName=#{uploadFileName}
			</if>
		WHERE seq=#{seq} AND pwd=#{pwd}
	</update>	
		
		
	<update id="updateHit" parameterType="String">
		UPDATE bbs2
		SET hit = hit+1
		WHERE seq=#{no}
	</update>
	
	
	<!-- 글 삭제하는 거염 -->
	<update id="updateBbs" parameterType="String">
	
		update bbs2 set bname=5 where seq=#{seq}
	
	</update>	
	
	<!-- 댓 삭제하는 거염 -->
	<update id="updateComm" parameterType="String">
	
		update comment_t set seq=3 where c_idx=#{c_idx}
	
	</update>
</mapper>








